start
    = first:clean_expr rest:clean_expr* {return (rest[0]) ? [first].concat(rest) : first;}

clean_expr
    = ws* exp:expression ws* {return exp;}

expression
    = "(" list:clean_expr* ")" {return list;}
    / single:atom {return single;}
    / "'" q_expr:clean_expr {return ["qoute", q_expr];}

atom
    = digs:digits* chars:validchar+ {return digs.concat(chars).join("");}
    / number

number
    = digs:digits+ {return parseInt(digs.join(""), 10);}

digits
    = [0-9]

validchar
    = [0-9a-zA-Z_?!+\-=<>$%^&*/.]

comment
    = ";;" [^\n\r]*

ws
    = comment
    / [ \t\n\r\f\v]
    